# sapply(packages,install.packages,character.only=TRUE)
sapply(packages, require, character.only = TRUE)
abideDir <- 'E:/PhDproject/ABIDE'
phenoDir <- file.path(abideDir, "Preprocessed")
clustDir <- file.path(abideDir, "Analysis/Cluster")
statiDir <- file.path(abideDir, "Analysis/Statistic")
plotDir <- file.path(abideDir, "Plot/CorrK2_Male")
date <- "240225"
pheno <- read.csv(file.path(phenoDir, paste0("abide_all_", date, ".csv")))
# 本代码用来分析两组ASD男性的变量之间的相关系数和显著性水平
# 雪如 2024年2月28日于北师大办公室
rm(list=ls())
packages <- c("tidyverse", "mgcv", "stringr", "reshape2", "magrittr", "ggplot2", "dplyr", "readxl",
"stringr", "ggseg", "patchwork", "effectsize", "pwr", "cowplot",
"readr", "ggridges", "tidyr", "stats")
# sapply(packages,install.packages,character.only=TRUE)
sapply(packages, require, character.only = TRUE)
abideDir <- '/Volumes/Xueru/PhDproject/ABIDE' # mac
# abideDir <- 'E:/PhDproject/ABIDE' # winds
phenoDir <- file.path(abideDir, "Preprocessed")
clustDir <- file.path(abideDir, "Analysis/Cluster")
statiDir <- file.path(abideDir, "Analysis/Statistic")
plotDir <- file.path(abideDir, "Plot/CorrK2_Male")
date <- "240225"
pheno <- read.csv(file.path(phenoDir, paste0("abide_all_", date, ".csv")))
colnames(pheno)[1] <- "participant"
cluster <- read.csv(file.path(clustDir, paste0("abide_1_ASD_pamK2_Male_dev_Cluster_", date, ".csv")))
colnames(cluster)[3:ncol(cluster)] <- paste0(colnames(cluster)[3:ncol(cluster)], "_centile")
Male_all <- merge(cluster, pheno, by = "participant", all.x = TRUE)
# 选择要分析的列，两组人群行为统计差异显著的列
names_col <- names(Male_all)[2:43]
names_col <- c(names_col, "ADI_R_VERBAL_TOTAL_BV")
Male_all <- Male_all[, names_col]
Male_all[, 43:ncol(Male_all)][Male_all[, 43:ncol(Male_all)] < 0] <- NA
L <- subset(Male_all, clusterID == "2") # 注意abide1里分出来的第一组是H组
L <- L[, -1]
H <- subset(Male_all, clusterID == "1")
H <- H[, -1]
# L组
# 初始化一个空的数据框来保存结果
results_L <- data.frame(ContinuousVariable = character(),
CategoricalVariable = character(),
FValue = numeric(),
PValue = numeric(),
stringsAsFactors = FALSE)
i=1
j=42
paste0("leveneTest(L[, ", i, "] ~ L[, ", j, "], data = mydata)")
# 进行Levene方差齐性检验
eval(parse(text = paste0("leveneTest(L[, ", i, "] ~ L[, ", j, "], data = L)")))
install.packages("car")
packages <- c("tidyverse", "mgcv", "stringr", "reshape2", "magrittr", "ggplot2", "dplyr", "readxl",
"stringr", "ggseg", "patchwork", "effectsize", "pwr", "cowplot", "car",
"readr", "ggridges", "tidyr", "stats")
# sapply(packages,install.packages,character.only=TRUE)
sapply(packages, require, character.only = TRUE)
# 进行Levene方差齐性检验
eval(parse(text = paste0("leveneTest(L[, ", i, "] ~ L[, ", j, "], data = L)")))
View(L)
# 进行Levene方差齐性检验
L[, j] <- as.factor(L[, j])
eval(parse(text = paste0("leveneTest(L[, ", i, "] ~ L[, ", j, "], data = L)")))
eval(parse(text = paste0("leven_result <- summary(leveneTest(L[, ", i, "] ~ L[, ", j, "], data = L))")))
leven_result[[1]]$`Pr(>F)`[1]
leven_result
leven_p_value <- summary(leven_result)$"Pr(>F)"[1]
eval(parse(text = paste0("leven_result <- leveneTest(L[, ", i, "] ~ L[, ", j, "], data = L)")))
leven_p_value <- summary(leven_result)$"Pr(>F)"[1]
View(leven_result)
leven_result
eval(parse(text = paste0("leven_result <- summary(leveneTest(L[, ", i, "] ~ L[, ", j, "], data = L))")))
eval(parse(text = paste0("leven_result <- summary(leveneTest(L[, ", i, "] ~ L[, ", j, "], data = L))")))
leven_p_value <- leven_result[[1]]$`Pr(>F)`[1]
paste0("leven_result <- summary(leveneTest(L[, ", i, "] ~ L[, ", j, "], data = L))")
eval(parse(text = paste0("leven_result <- leveneTest(L[, ", i, "] ~ L[, ", j, "], data = L)")))
leven_p_value <- summary(leven_result)$"Pr(>F)"[1]
leven_result
leven_p_value <- leven_result$"Pr(>F)"[1]
leven_p_value
# 使用cor.test函数计算Spearman相关系数
cor.test_result <- cor.test(L[, j], L[, i] method = "spearman")
# 使用cor.test函数计算Spearman相关系数
cor.test_result <- cor.test(L[, j], L[, i], method = "spearman")
# 使用cor.test函数计算Spearman相关系数
cor.test_result <- cor.test(L[, i], L[, j], method = "spearman")
# 本代码用来分析两组ASD男性的变量之间的相关系数和显著性水平
# 雪如 2024年2月28日于北师大办公室
rm(list=ls())
packages <- c("tidyverse", "mgcv", "stringr", "reshape2", "magrittr", "ggplot2", "dplyr", "readxl",
"stringr", "ggseg", "patchwork", "effectsize", "pwr", "cowplot", "car",
"readr", "ggridges", "tidyr", "stats")
# sapply(packages,install.packages,character.only=TRUE)
sapply(packages, require, character.only = TRUE)
abideDir <- '/Volumes/Xueru/PhDproject/ABIDE' # mac
# abideDir <- 'E:/PhDproject/ABIDE' # winds
phenoDir <- file.path(abideDir, "Preprocessed")
clustDir <- file.path(abideDir, "Analysis/Cluster")
statiDir <- file.path(abideDir, "Analysis/Statistic")
plotDir <- file.path(abideDir, "Plot/CorrK2_Male")
date <- "240225"
pheno <- read.csv(file.path(phenoDir, paste0("abide_all_", date, ".csv")))
colnames(pheno)[1] <- "participant"
cluster <- read.csv(file.path(clustDir, paste0("abide_1_ASD_pamK2_Male_dev_Cluster_", date, ".csv")))
colnames(cluster)[3:ncol(cluster)] <- paste0(colnames(cluster)[3:ncol(cluster)], "_centile")
Male_all <- merge(cluster, pheno, by = "participant", all.x = TRUE)
# 选择要分析的列，两组人群行为统计差异显著的列
names_col <- names(Male_all)[2:43]
names_col <- c(names_col, "ADI_R_VERBAL_TOTAL_BV")
Male_all <- Male_all[, names_col]
Male_all[, 43:ncol(Male_all)][Male_all[, 43:ncol(Male_all)] < 0] <- NA
L <- subset(Male_all, clusterID == "2") # 注意abide1里分出来的第一组是H组
L <- L[, -1]
H <- subset(Male_all, clusterID == "1")
H <- H[, -1]
##################################### 计算变量之间的相关 ###########################################
# L组
# 初始化一个空的数据框来保存结果
results_L <- data.frame(ContinuousVariable = character(),
CategoricalVariable = character(),
FValue = numeric(),
PValue = numeric(),
stringsAsFactors = FALSE)
i=1
j=42
# 使用cor.test函数计算Spearman相关系数
cor.test_result <- cor.test(L[, i], L[, j], method = "spearman")
cor.test_result
cor_test_result$estimate
# 使用cor.test函数计算Spearman相关系数
cor_test_result <- cor.test(L[, i], L[, j], method = "spearman")
# 从结果对象中提取rho值和P值
rho_value <- cor_test_result$estimate
rho_value
p_value <- cor_test_result$p.value
p_value
# 本代码用来分析两组ASD男性的变量之间的相关系数和显著性水平
# 雪如 2024年2月28日于北师大办公室
rm(list=ls())
packages <- c("tidyverse", "mgcv", "stringr", "reshape2", "magrittr", "ggplot2", "dplyr", "readxl",
"stringr", "ggseg", "patchwork", "effectsize", "pwr", "cowplot",
"readr", "ggridges", "tidyr", "stats")
# sapply(packages,install.packages,character.only=TRUE)
sapply(packages, require, character.only = TRUE)
abideDir <- '/Volumes/Xueru/PhDproject/ABIDE' # mac
# abideDir <- 'E:/PhDproject/ABIDE' # winds
phenoDir <- file.path(abideDir, "Preprocessed")
clustDir <- file.path(abideDir, "Analysis/Cluster")
statiDir <- file.path(abideDir, "Analysis/Statistic")
plotDir <- file.path(abideDir, "Plot/CorrK2_Male")
date <- "240225"
pheno <- read.csv(file.path(phenoDir, paste0("abide_all_", date, ".csv")))
colnames(pheno)[1] <- "participant"
cluster <- read.csv(file.path(clustDir, paste0("abide_1_ASD_pamK2_Male_dev_Cluster_", date, ".csv")))
colnames(cluster)[3:ncol(cluster)] <- paste0(colnames(cluster)[3:ncol(cluster)], "_centile")
Male_all <- merge(cluster, pheno, by = "participant", all.x = TRUE)
# 选择要分析的列，两组人群行为统计差异显著的列
names_col <- names(Male_all)[2:43]
names_col <- c(names_col, "ADI_R_VERBAL_TOTAL_BV")
Male_all <- Male_all[, names_col]
Male_all[, 43:ncol(Male_all)][Male_all[, 43:ncol(Male_all)] < 0] <- NA
L <- subset(Male_all, clusterID == "2") # 注意abide1里分出来的第一组是H组
L <- L[, -1]
H <- subset(Male_all, clusterID == "1")
H <- H[, -1]
##################################### 计算变量之间的相关 ###########################################
# L组
# 初始化一个空的数据框来保存结果
results_L <- data.frame(x = character(),
y = character(),
R = numeric(),
P = numeric(),
stringsAsFactors = FALSE)
for (i in 1:41) { # 自变量
for (j in 42:ncol(L)) { # 因变量
cor_test_result <- cor.test(L[, i], L[, j], method = "spearman")
results_L <- rbind(results_L, data.frame(x = names(L)[i],
y = names(L)[j],
R = cor_test_result$estimate,
P = cor_test_result$p.value))
}
}
# H组
results_H <- data.frame(x = character(),
y = character(),
R = numeric(),
P = numeric(),
stringsAsFactors = FALSE)
for (i in 1:41) { # 自变量
for (j in 42:ncol(H)) { # 因变量
cor_test_result <- cor.test(H[, i], H[, j], method = "spearman")
results_H <- rbind(results_H, data.frame(x = names(H)[i],
y = names(H)[j],
R = cor_test_result$estimate,
P = cor_test_result$p.value))
}
}
L_sorted <- arrange(results_L, PValue)
L_sorted <- arrange(results_L, P)
H_sorted <- arrange(results_H, P)
### 保存下来结果
write.csv(L_sorted, file.path(statiDir, paste0("abide_1_asd_male_K2_statis_Corr_L_", date, ".csv")),
row.names = F) # !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
write.csv(H_sorted, file.path(statiDir, paste0("abide_1_asd_male_K2_statis_Corr_H_", date, ".csv")),
row.names = F) # !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
View(L_sorted)
View(H_sorted)
p_less_than_0.05 <- sum(L_sorted$P < 0.05) # =0
p_less_than_0.05
c(L_sorted[i, 1], L_sorted[i, 2])
to_plot_names
to_plot_names <- c(L_sorted[i, 1], L_sorted[i, 2])
to_plot_names
L_sorted[i, 4]
for (i in 1:p_less_than_0.05) {
to_plot_names <- c(L_sorted[i, 1], L_sorted[i, 2])
to_plot_names
plotPoint <- L[, to_plot_names]
colnames(plotPoint) <- c("x","y")
note <- paste0("P value = ", round(L_sorted[i, 4], 4))
ggplot(plotPoint, aes(x = x, y = y)) +
geom_point(color = "#add8e6", alpha = .8, size = 2, shape = 16) +  # 添加散点图层
geom_smooth(method = "lm", se = T, lwd = 2, color = "#add8e6", fill = "#add8e6") +
theme_cowplot() +
scale_x_continuous(limits = c(0,1), breaks = c(0,0.25,0.5,0.75,1)) +
xlab(to_plot_names[1]) +
ylab(to_plot_names[2]) +
annotate("text", x = Inf, y = Inf, label = note, hjust = 1.2, vjust = 1.2, size = 7) +
theme(legend.position = "none", # without legend
axis.text.y = element_text(size = 15, face = "bold"),
axis.text.x = element_text(size = 15, face = "bold"))
name <- file.path(plotDir, paste0("abide_1_asd_male_K1_corr_", i, "_", date, ".png")) # !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
ggsave(name, width = 7, height = 7, units = "in", dpi = 500)
}
p_less_than_0.05 <- sum(H_sorted$PValue < 0.05)
p_less_than_0.05
View(H_sorted)
p_less_than_0.05 <- sum(H_sorted$P < 0.05)
for (i in 1:p_less_than_0.05) {
to_plot_names <- c(H_sorted[i, 1], H_sorted[i, 2])
to_plot_names
plotPoint <- H[, to_plot_names]
colnames(plotPoint) <- c("x","y")
note <- paste0("P value = ", round(H_sorted[i, 4], 4))
ggplot(plotPoint, aes(x = x, y = y)) +
geom_point(color = "#ffb699", alpha = .8, size = 2, shape = 16) +  # 添加散点图层
geom_smooth(method = "lm", se = T, lwd = 2, color = "#ffb699", fill = "#ffb699") +
theme_cowplot() +
scale_x_continuous(limits = c(0,1), breaks = c(0,0.25,0.5,0.75,1)) +
xlab(to_plot_names[1]) +
ylab(to_plot_names[2]) +
annotate("text", x = Inf, y = Inf, label = note, hjust = 1.2, vjust = 1.2, size = 7) +
theme(legend.position = "none", # without legend
axis.text.y = element_text(size = 15, face = "bold"),
axis.text.x = element_text(size = 15, face = "bold"))
name <- file.path(plotDir, paste0("abide_1_asd_male_K2_corr_", i, "_", date, ".png")) # !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
ggsave(name, width = 7, height = 7, units = "in", dpi = 500)
}
note_p <- paste0("P value = ", round(H_sorted[i, "P"], 4))
note_p
note_r
note_r <- paste0("R value = ", round(H_sorted[i, "R"], 4))
note_r
ggplot(plotPoint, aes(x = x, y = y)) +
geom_point(color = "#ffb699", alpha = .8, size = 2, shape = 16) +  # 添加散点图层
geom_smooth(method = "lm", se = T, lwd = 2, color = "#ffb699", fill = "#ffb699") +
theme_cowplot() +
scale_x_continuous(limits = c(0,1), breaks = c(0,0.25,0.5,0.75,1)) +
xlab(to_plot_names[1]) +
ylab(to_plot_names[2]) +
annotate("text", x = Inf, y = Inf, label = note_r, hjust = 1.2, vjust = 1.2, size = 7) +
annotate("text", x = Inf, y = Inf, label = note_p, hjust = 1, vjust = 1.2, size = 7) +
theme(legend.position = "none", # without legend
axis.text.y = element_text(size = 15, face = "bold"),
axis.text.x = element_text(size = 15, face = "bold"))
ggplot(plotPoint, aes(x = x, y = y)) +
geom_point(color = "#ffb699", alpha = .8, size = 2, shape = 16) +  # 添加散点图层
geom_smooth(method = "lm", se = T, lwd = 2, color = "#ffb699", fill = "#ffb699") +
theme_cowplot() +
scale_x_continuous(limits = c(0,1), breaks = c(0,0.25,0.5,0.75,1)) +
xlab(to_plot_names[1]) +
ylab(to_plot_names[2]) +
annotate("text", x = Inf, y = Inf, label = note_r, hjust = 1.2, vjust = 1.2, size = 7) +
annotate("text", x = Inf, y = Inf, label = note_p, hjust = 1.2, vjust = .2, size = 7) +
theme(legend.position = "none", # without legend
axis.text.y = element_text(size = 15, face = "bold"),
axis.text.x = element_text(size = 15, face = "bold"))
ggplot(plotPoint, aes(x = x, y = y)) +
geom_point(color = "#ffb699", alpha = .8, size = 2, shape = 16) +  # 添加散点图层
geom_smooth(method = "lm", se = T, lwd = 2, color = "#ffb699", fill = "#ffb699") +
theme_cowplot() +
scale_x_continuous(limits = c(0,1), breaks = c(0,0.25,0.5,0.75,1)) +
xlab(to_plot_names[1]) +
ylab(to_plot_names[2]) +
annotate("text", x = Inf, y = Inf, label = note_r, hjust = 1.2, vjust = -2, size = 7) +
annotate("text", x = Inf, y = Inf, label = note_p, hjust = 1.2, vjust = 1.2, size = 7) +
theme(legend.position = "none", # without legend
axis.text.y = element_text(size = 15, face = "bold"),
axis.text.x = element_text(size = 15, face = "bold"))
ggplot(plotPoint, aes(x = x, y = y)) +
geom_point(color = "#ffb699", alpha = .8, size = 2, shape = 16) +  # 添加散点图层
geom_smooth(method = "lm", se = T, lwd = 2, color = "#ffb699", fill = "#ffb699") +
theme_cowplot() +
scale_x_continuous(limits = c(0,1), breaks = c(0,0.25,0.5,0.75,1)) +
xlab(to_plot_names[1]) +
ylab(to_plot_names[2]) +
annotate("text", x = Inf, y = Inf, label = note_r, hjust = 1.2, vjust = 2, size = 7) +
annotate("text", x = Inf, y = Inf, label = note_p, hjust = 1.2, vjust = 1.2, size = 7) +
theme(legend.position = "none", # without legend
axis.text.y = element_text(size = 15, face = "bold"),
axis.text.x = element_text(size = 15, face = "bold"))
ggplot(plotPoint, aes(x = x, y = y)) +
geom_point(color = "#ffb699", alpha = .8, size = 2, shape = 16) +  # 添加散点图层
geom_smooth(method = "lm", se = T, lwd = 2, color = "#ffb699", fill = "#ffb699") +
theme_cowplot() +
scale_x_continuous(limits = c(0,1), breaks = c(0,0.25,0.5,0.75,1)) +
xlab(to_plot_names[1]) +
ylab(to_plot_names[2]) +
annotate("text", x = Inf, y = Inf, label = note_r, hjust = 1.2, vjust = 3, size = 7) +
annotate("text", x = Inf, y = Inf, label = note_p, hjust = 1.2, vjust = 1.2, size = 7) +
theme(legend.position = "none", # without legend
axis.text.y = element_text(size = 15, face = "bold"),
axis.text.x = element_text(size = 15, face = "bold"))
source("/Volumes/Xueru/PhDproject/MyScript/xueru_PhD/xueru_PhD_62_AnalysisClusterCorr_Male_A1.R")
source("/Volumes/Xueru/PhDproject/MyScript/xueru_PhD/xueru_PhD_62_AnalysisClusterCorr_Male_A1.R")
source("/Volumes/Xueru/PhDproject/MyScript/xueru_PhD/xueru_PhD_63_AnalysisClusterCorr_Male_A2.R")
source("/Volumes/Xueru/PhDproject/MyScript/xueru_PhD/xueru_PhD_63_AnalysisClusterCorr_Male_A2.R")
rm(list=ls())
packages <- c("tidyverse", "mgcv", "stringr", "reshape2", "magrittr", "ggplot2", "dplyr", "readxl",
"stringr", "ggseg", "patchwork", "effectsize", "pwr", "cowplot",
"readr", "ggridges", "tidyr", "stats")
# sapply(packages,install.packages,character.only=TRUE)
sapply(packages, require, character.only = TRUE)
abideDir <- '/Volumes/Xueru/PhDproject/ABIDE' # mac
# abideDir <- 'E:/PhDproject/ABIDE' # winds
phenoDir <- file.path(abideDir, "Preprocessed")
clustDir <- file.path(abideDir, "Analysis/Cluster")
statiDir <- file.path(abideDir, "Analysis/Statistic")
plotDir <- file.path(abideDir, "Plot/CorrK2_Male")
date <- "240225"
pheno <- read.csv(file.path(phenoDir, paste0("abide_all_", date, ".csv")))
colnames(pheno)[1] <- "participant"
cluster <- read.csv(file.path(clustDir, paste0("abide_2_ASD_pamK2_Male_dev_Cluster_", date, ".csv")))
colnames(cluster)[3:ncol(cluster)] <- paste0(colnames(cluster)[3:ncol(cluster)], "_centile")
Male_all <- merge(cluster, pheno, by = "participant", all.x = TRUE)
# 选择要分析的列，两组人群行为统计差异显著的列
names_col <- names(Male_all)[2:43]
names_col <- c(names_col, "ADI_R_RRB_TOTAL_C")
Male_all <- Male_all[, names_col]
Male_all[, 43:ncol(Male_all)][Male_all[, 43:ncol(Male_all)] < 0] <- NA
L <- subset(Male_all, clusterID == "1")
L <- L[, -1]
H <- subset(Male_all, clusterID == "2")
H <- H[, -1]
# L组
# L组
# 初始化一个空的数据框来保存结果
results_L <- data.frame(x = character(),
y = character(),
R = numeric(),
P = numeric(),
stringsAsFactors = FALSE)
for (i in 1:41) { # 自变量
for (j in 42:ncol(L)) { # 因变量
cor_test_result <- cor.test(L[, i], L[, j], method = "spearman")
results_L <- rbind(results_L, data.frame(x = names(L)[i],
y = names(L)[j],
R = cor_test_result$estimate,
P = cor_test_result$p.value))
}
}
# H组
results_H <- data.frame(x = character(),
y = character(),
R = numeric(),
P = numeric(),
stringsAsFactors = FALSE)
for (i in 1:41) { # 自变量
for (j in 42:ncol(H)) { # 因变量
cor_test_result <- cor.test(H[, i], H[, j], method = "spearman")
results_H <- rbind(results_H, data.frame(x = names(H)[i],
y = names(H)[j],
R = cor_test_result$estimate,
P = cor_test_result$p.value))
}
}
L_sorted <- arrange(results_L, P)
H_sorted <- arrange(results_H, P)
### 保存下来结果
write.csv(L_sorted, file.path(statiDir, paste0("abide_2_asd_male_K2_statis_Corr_L_", date, ".csv")),
row.names = F) # !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
write.csv(H_sorted, file.path(statiDir, paste0("abide_2_asd_male_K2_statis_Corr_H_", date, ".csv")),
row.names = F) # !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
p_less_than_0.05 <- sum(L_sorted$P < 0.05) # =0
p_less_than_0.05
for (i in 1:p_less_than_0.05) {
to_plot_names <- c(L_sorted[i, 1], L_sorted[i, 2])
to_plot_names
plotPoint <- L[, to_plot_names]
colnames(plotPoint) <- c("x","y")
note_p <- paste0("p = ", round(L_sorted[i, "P"], 4))
note_r <- paste0("r = ", round(L_sorted[i, "R"], 4))
ggplot(plotPoint, aes(x = x, y = y)) +
geom_point(color = "#add8e6", alpha = .8, size = 2, shape = 16) +  # 添加散点图层
geom_smooth(method = "lm", se = T, lwd = 2, color = "#add8e6", fill = "#add8e6") +
theme_cowplot() +
scale_x_continuous(limits = c(0,1), breaks = c(0,0.25,0.5,0.75,1)) +
xlab(to_plot_names[1]) +
ylab(to_plot_names[2]) +
annotate("text", x = Inf, y = Inf, label = note_r, hjust = 1.2, vjust = 3, size = 7) +
annotate("text", x = Inf, y = Inf, label = note_p, hjust = 1.2, vjust = 1.2, size = 7) +
theme(legend.position = "none", # without legend
axis.text.y = element_text(size = 15, face = "bold"),
axis.text.x = element_text(size = 15, face = "bold"))
name <- file.path(plotDir, paste0("abide_2_asd_male_K1_corr_", i, "_", date, ".png")) # !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
ggsave(name, width = 7, height = 7, units = "in", dpi = 500)
}
p_less_than_0.05 <- sum(H_sorted$P < 0.05)
p_less_than_0.05
for (i in 1:p_less_than_0.05) {
to_plot_names <- c(H_sorted[i, 1], H_sorted[i, 2])
to_plot_names
plotPoint <- H[, to_plot_names]
colnames(plotPoint) <- c("x","y")
note_p <- paste0("p = ", round(H_sorted[i, "P"], 4))
note_r <- paste0("r = ", round(H_sorted[i, "R"], 4))
ggplot(plotPoint, aes(x = x, y = y)) +
geom_point(color = "#ffb699", alpha = .8, size = 2, shape = 16) +  # 添加散点图层
geom_smooth(method = "lm", se = T, lwd = 2, color = "#ffb699", fill = "#ffb699") +
theme_cowplot() +
scale_x_continuous(limits = c(0,1), breaks = c(0,0.25,0.5,0.75,1)) +
xlab(to_plot_names[1]) +
ylab(to_plot_names[2]) +
annotate("text", x = Inf, y = Inf, label = note_r, hjust = 1.2, vjust = 3, size = 7) +
annotate("text", x = Inf, y = Inf, label = note_p, hjust = 1.2, vjust = 1.2, size = 7) +
theme(legend.position = "none", # without legend
axis.text.y = element_text(size = 15, face = "bold"),
axis.text.x = element_text(size = 15, face = "bold"))
name <- file.path(plotDir, paste0("abide_2_asd_male_K2_corr_", i, "_", date, ".png")) # !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
ggsave(name, width = 7, height = 7, units = "in", dpi = 500)
}
source("/Volumes/Xueru/PhDproject/MyScript/xueru_PhD/xueru_PhD_63_AnalysisClusterCorr_Male_A2.R")
# 本代码用来分析两组ASD男性的变量之间的相关系数和显著性水平
# 雪如 2024年2月28日于北师大办公室
rm(list=ls())
packages <- c("tidyverse", "mgcv", "stringr", "reshape2", "magrittr", "ggplot2", "dplyr", "readxl",
"stringr", "ggseg", "patchwork", "effectsize", "pwr", "cowplot",
"readr", "ggridges", "tidyr", "stats")
# sapply(packages,install.packages,character.only=TRUE)
sapply(packages, require, character.only = TRUE)
abideDir <- '/Volumes/Xueru/PhDproject/ABIDE' # mac
# abideDir <- 'E:/PhDproject/ABIDE' # winds
phenoDir <- file.path(abideDir, "Preprocessed")
clustDir <- file.path(abideDir, "Analysis/Cluster")
statiDir <- file.path(abideDir, "Analysis/Statistic")
plotDir <- file.path(abideDir, "Plot/CorrK2_Male")
date <- "240225"
pheno <- read.csv(file.path(phenoDir, paste0("abide_all_", date, ".csv")))
colnames(pheno)[1] <- "participant"
cluster <- read.csv(file.path(clustDir, paste0("ASD_pamK2_Male_dev_Cluster_", date, ".csv")))
colnames(cluster)[3:ncol(cluster)] <- paste0(colnames(cluster)[3:ncol(cluster)], "_centile")
Male_all <- merge(cluster, pheno, by = "participant", all.x = TRUE)
# 选择要分析的列，两组人群行为统计差异显著的列
names_col <- names(Male_all)[2:43]
names_col <- c(names_col, "ADOS_G_SOCIAL", "ADOS_2_SOCAFFECT", "ADOS_2_TOTAL", "ADOS_2_SEVERITY_TOTAL")
Male_all <- Male_all[, names_col]
Male_all[, 43:ncol(Male_all)][Male_all[, 43:ncol(Male_all)] < 0] <- NA
L <- subset(Male_all, clusterID == "1")
L <- L[, -1]
H <- subset(Male_all, clusterID == "2")
H <- H[, -1]
# L组
results_L <- data.frame(x = character(),
y = character(),
R = numeric(),
P = numeric(),
stringsAsFactors = FALSE)
for (i in 1:41) { # 自变量
for (j in 42:ncol(L)) { # 因变量
cor_test_result <- cor.test(L[, i], L[, j], method = "spearman")
results_L <- rbind(results_L, data.frame(x = names(L)[i],
y = names(L)[j],
R = cor_test_result$estimate,
P = cor_test_result$p.value))
}
}
# H组
results_H <- data.frame(x = character(),
y = character(),
R = numeric(),
P = numeric(),
stringsAsFactors = FALSE)
for (i in 1:41) { # 自变量
for (j in 42:ncol(H)) { # 因变量
cor_test_result <- cor.test(H[, i], H[, j], method = "spearman")
results_H <- rbind(results_H, data.frame(x = names(H)[i],
y = names(H)[j],
R = cor_test_result$estimate,
P = cor_test_result$p.value))
}
}
L_sorted <- arrange(results_L, P)
H_sorted <- arrange(results_H, P)
### 保存下来结果
write.csv(L_sorted, file.path(statiDir, paste0("asd_male_K2_statis_Corr_L_", date, ".csv")),
row.names = F) # !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
write.csv(H_sorted, file.path(statiDir, paste0("asd_male_K2_statis_Corr_H_", date, ".csv")),
row.names = F) # !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
p_less_than_0.05 <- sum(L_sorted$P < 0.05) # =0
p_less_than_0.05
p_less_than_0.05 <- sum(L_sorted$P < 0.05)
p_less_than_0.05
source("/Volumes/Xueru/PhDproject/MyScript/xueru_PhD/xueru_PhD_61_AnalysisClusterCorr_Male_AA.R")
